% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-statistics-single.R
\name{plot_violin}
\alias{plot_violin}
\alias{plot_violinplot}
\alias{plot_boxplot}
\alias{plot_vioboxplot}
\title{Plot distribution and results of statistical tests}
\usage{
plot_violin(
  df,
  variables = NULL,
  across = NULL,
  across.subset = NULL,
  relevel = TRUE,
  test.pairwise = NULL,
  test.groupwise = NULL,
  ref.group = NULL,
  step.increase = 0.1,
  vjust = 0,
  scales = "free",
  nrow = NULL,
  ncol = NULL,
  display.facets = TRUE,
  display.points = FALSE,
  pt.alpha = 0.8,
  pt.color = "black",
  pt.num = 100,
  pt.shape = 19,
  pt.size = 1.5,
  clrp = "milo",
  clrp.adjust = NULL,
  verbose = TRUE,
  ...
)

plot_violinplot(
  df,
  variables = NULL,
  across = NULL,
  across.subset = NULL,
  relevel = TRUE,
  test.pairwise = NULL,
  test.groupwise = NULL,
  ref.group = NULL,
  step.increase = 0.1,
  vjust = 0,
  scales = "free",
  nrow = NULL,
  ncol = NULL,
  display.facets = TRUE,
  display.points = FALSE,
  pt.alpha = 0.8,
  pt.color = "black",
  pt.num = 100,
  pt.shape = 19,
  pt.size = 1.5,
  clrp = "milo",
  clrp.adjust = NULL,
  verbose = TRUE,
  ...
)

plot_boxplot(
  df,
  variables = NULL,
  across = NULL,
  across.subset = NULL,
  relevel = TRUE,
  test.pairwise = NULL,
  test.groupwise = NULL,
  ref.group = NULL,
  step.increase = 0.1,
  vjust = 0,
  scales = "free",
  nrow = NULL,
  ncol = NULL,
  display.facets = TRUE,
  display.points = FALSE,
  pt.alpha = 0.8,
  pt.color = "black",
  pt.num = 100,
  pt.shape = 19,
  pt.size = 1.5,
  clrp = "milo",
  clrp.adjust = NULL,
  verbose = TRUE,
  ...
)

plot_vioboxplot(
  df,
  variables = NULL,
  across = NULL,
  across.subset = NULL,
  relevel = TRUE,
  test.pairwise = NULL,
  test.groupwise = NULL,
  ref.group = NULL,
  step.increase = 0.1,
  box.width = 0.25,
  vjust = 0,
  scales = "free",
  nrow = NULL,
  ncol = NULL,
  display.facets = TRUE,
  display.points = FALSE,
  pt.alpha = 0.8,
  pt.color = "black",
  pt.num = 100,
  pt.shape = 19,
  pt.size = 1.5,
  clrp = "milo",
  clrp.adjust = NULL,
  fill = NA,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{df}{A data.frame.}

\item{variables}{Character vector. Specifies the variables
of interest. If set to NULL all valid variables of the input data.frame are
considered (as long as the total number does not exceeds the limit).

If there are more variables you are interested in than they are variables
you are not interested in specify those that you are not interested in prefixed
with an \emph{'-'}. Variables prefixed that way are discarded and the remaining are kept.}

\item{across}{Character value. Specifies the discrete variable in the data.frame
across which the variables of interest are to be analyzed or displayed.}

\item{across.subset}{Character vector. The groups of interest that the grouping variable
denoted in \code{across} contains.

If there are more groups you are interested in than they are groups you are not interested
in specify those that you are not interested in prefixed with an \emph{'-'}.
Variables prefixed that way are discarded and the remaining are kept.}

\item{relevel}{Logical value. If set to TRUE the input order of \code{across.subset} and
\code{variables} determines the order in which the groups of interest are displayed.}

\item{test.pairwise}{Character value or NULL. If character, one of \emph{'t.test', 'wilcox.test'}.}

\item{test.groupwise}{Character value or NULL. If character, one of \emph{'anova', 'kruskal.test'}.}

\item{ref.group}{Character value. Specifies the reference group for the pairwise statistical test. Must
be among the groups the variable specified in \code{across} contains. If set to NULL the
first group found is taken.}

\item{step.increase}{Numeric value. Denotes the increase in fraction of total
height for every additional comparison to minimize overlap.}

\item{vjust}{Numeric value. Denotes the relative, vertical position of the results of
the test denoted in \code{test.groupwise}. Negative input highers, positive
input lowers the position.}

\item{scales}{Given to \code{ggplot2::facet_wrap()}. Affects the way the subplots
are displayed.}

\item{nrow}{Given to \code{ggplot2::facet_wrap()}. Affects the way the subplots
are displayed.}

\item{ncol}{Given to \code{ggplot2::facet_wrap()}. Affects the way the subplots
are displayed.}

\item{display.facets}{Logical value. Only relevant if \code{across} is set
to NULL. Denotes if a subplot for each variable is supposed to be created.}

\item{display.points}{Logical value. If set to TRUE points are used additionally
to display the results.}

\item{pt.alpha}{Numeric value. Specifies the transparency of points.}

\item{pt.color}{Character value. Specifies the color with which all points are displayed .}

\item{pt.num}{Numeric value. Species the number of points (sample size)
to prevent overplotting.}

\item{pt.shape}{Numeric or character value. If numeric, the respective
shape is taken for all points. If character, the respective variable is
mapped to the shape-aesthetic.}

\item{pt.size}{Numeric values. Specifies size of points.}

\item{clrp}{Character value. Specifies the color palette to be used to represent
groups of discrete variables. Run \code{validColorPalettes()} to obtain valid
input options.}

\item{clrp.adjust}{Named character vector. Can be used to adjust colors
with which groups are displayed. Names indicate groups, values
indicate the colors with which specific groups are supposed to be displayed.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}

\item{...}{Additional arguments given to the respective \code{ggplot2::geom_<plot_type>()}
function.}
}
\value{
Returns a ggplot-object that can be additionally customized according
to the rules of the ggplot2-framework.
}
\description{
These functions visualize the distribution of numerical variables via box-
and violinplots while simultaneously allowing for statistical tests. See details
for more.
}
\details{
Argument \code{variables} accepts only values that refer to numerical
variables. Use \code{vjust} and \code{step.increase} to move the results of statistical
tests in order to keep the plot aesthetically pleasing.
}
\examples{
#Not run:

library(tidyerse)

df <- mtcars

df$cluster_kmeans <-
  stats::kmeans(x = mtcars, centers = 4)$cluster \%>\%
  base::as.factor()

plot_violin(df)

plot_violin(df, variables = c("qsec", "wt", "hp"))

plot_violin(df,
            variables = c("qsec", "wt", "hp"),
            display.facets = FALSE)

plot_violin(df,
            variables = c("qsec", "wt", "hp"),
            across = "cluster_kmeans",
            ncol = 1)
}
