% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/math-related-functions.R
\name{fit_curve}
\alias{fit_curve}
\title{Curve fitting}
\usage{
fit_curve(input, fn, rev = FALSE, normalize = TRUE)
}
\arguments{
\item{input}{Numeric vector.}

\item{fn}{Character value. The function to call specified as a string.
Currently one of: \emph{'one_peak', 'two_peaks', 'gradient', 'sinus', 'log'}.}

\item{rev}{Logical. If set to TRUE the fitted curve is returned upside-down.}

\item{normalize}{Logical. If set to TRUE numeric values will be rescaled to
values between one and zero.}
}
\value{
Numeric vector.
}
\description{
Fits a curve to a numeric vector.
}
\details{
This function takes a numeric vector of length x and returns
a numeric vector of the same length. The values of the returned vector correspond to
the values needed to display or work with the pattern specified in \code{fn}.
}
\examples{
library(tidyverse)
library(confuns)


data.frame(variable = normalize(base::log(1:100))) \%>\%
 dplyr::mutate(
   curve = fit_curve(input = variable, fn = "sinus", normalize = TRUE),
   residuals = (variable - curve) \%>\% normalize() ,
   seq = row_number()) \%>\%
 tidyr::pivot_longer(
   cols = dplyr::all_of(x = c("curve", "residuals", "variable")),
   names_to = "pattern",
   values_to = "values") \%>\%
 ggplot(mapping = aes(x = seq, y = values)) +
 geom_line(mapping = aes(color = pattern))

}
