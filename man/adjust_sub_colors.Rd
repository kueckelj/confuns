% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/color-palettes-and-spectra.R
\name{adjust_sub_colors}
\alias{adjust_sub_colors}
\title{Create sub cluster colors}
\usage{
adjust_sub_colors(
  input,
  clrp,
  clrp.adjust = NULL,
  clr.bottom = "white",
  offset = 1,
  into = c("main", "sub"),
  sep = "_",
  alphabetically = TRUE
)
}
\arguments{
\item{input}{Character vector of group names.}

\item{clrp}{Character value. The color palette of choice.
Run \code{confuns::all_color_palettes()} to see all valid input choices.

(Ignored if \code{variable} is numeric)}

\item{clrp.adjust}{Named character vector or NULL. If character, it adjusts the
colors that are used to represent the groups. Names of the input vector must refer
to the group and the respective named element denotes the color with which to
represent the group.}

\item{clr.bottom}{Character value. The color up to which the sub panel
for each sub grouping is created.}

\item{offset}{Integer value. If 1, the default, the last sub group is mapped
to the color that comes directly before \code{clr.bottom}.}

\item{into}{Character vector of length two. A combination of \emph{'main', 'sub'}.
If \code{into = c(\emph{'main', 'sub'})} string parts before \code{sep} are
considered the main grouping and strings parts after \code{sep} are considered
the sub part. Works the other way around for \code{into = c(\emph{'sub', 'main'})}.}

\item{sep}{Character value. Is used to cut the sub grouping
information from the variabel in \code{main}.}

\item{alphabetically}{If \code{TRUE}, sub groups are sorted alphabetically before
being mapped to colors.}
}
\value{
Named character vector. Names are the groups. Values are the colors.
}
\description{
Creates a vector of colors based on sub grouping.
}
\examples{

library(tidyverse)
library(confuns)

df <-
 mutate(
  .data = iris,
  numbers = sample(1:3, size = nrow(iris), replace = T),
  spec_sub = str_c(Species, numbers, sep = ".") \%>\% as.factor()
 )

adjust_out <- adjust_sub_colors(input = df$spec_sub, clrp = "npg", sep = ".")

print(adjust_out)

ggplot(data = df, mapping = aes(x = Sepal.Width, y = Sepal.Length)) +
 geom_point(mapping = aes(color = spec_sub), size = 4) +
 scale_color_add_on(
  clrp = "npg",
  variable = df$spec_sub,
  clrp.adjust = adjust_out
  )

}
